@page "/"
@inject IJSRuntime JS
@inject NavigationManager Navigation
@using MySql.Data.MySqlClient
@using BlazorApp1.Data
@using System.Diagnostics;

@code {
    private bool _navigated = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender || _navigated) return;

        try
        {
            var token = await JS.InvokeAsync<string>("localStorage.getItem", "auth_token");
            if (string.IsNullOrWhiteSpace(token))
            {
                Navigation.NavigateTo("/registration");
                _navigated = true;
                return;
            }

            var connStr = "Server=31.31.197.28;Port=3310;Database=u3126643_flowers_db;User=u3126643_user_app;Password=xxxKKTX6815!;Charset=utf8mb4;SslMode=none;";
            using var conn = new MySqlConnection(connStr);
            await conn.OpenAsync();
            var cmd = new MySqlCommand(@"
             SELECT u.id, u.username, u.email, u.password_hash, u.coins
             FROM authtokens a
            JOIN users u ON a.user_id = u.id
            WHERE a.token = @token AND a.expires_at > NOW()", conn);

            cmd.Parameters.AddWithValue("@token", token);
            using var reader = await cmd.ExecuteReaderAsync();

            if (await reader.ReadAsync())
            {
                int userId = reader.GetInt32(0);
                reader.Close(); // обязательно закрываем перед следующим запросом

                UserSession.CurrentUser = await UserRepository.LoadUserById(userId, conn);

                Debug.WriteLine($" User loaded: {UserSession.CurrentUser.Username}, Email: {UserSession.CurrentUser.Email}, Coins: {UserSession.CurrentUser.Coins}");
                foreach (var flower in UserSession.CurrentUser.Flowers)
                {
                    Debug.WriteLine($" 🌸 Flower slot {flower.Slot}: {flower.DisplayName} (CodeName: {flower.CodeName}, HP: {flower.Hp}/15)");
                }


                Navigation.NavigateTo("/main");
            }
            else
            {
                Navigation.NavigateTo("/registration");
            }

            _navigated = true;
        }
        catch
        {
            Navigation.NavigateTo("/registration");
            _navigated = true;
        }
    }
}
